# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A7c22ZDpMFSpPvJAlS5djPDFdMkCXoFI
"""

import heapq


def dijkstra(G, s, d):
    my_dict = {}
    visit = {}
    pq = {}
    for i in G.keys():
        val = float('inf')
        my_dict[i] = val
        visit[i] = False
        pq[i] = list()
    my_queue = []
    my_dict[s] = 0
    my_queue.append((0, s))
    pq[s].append(s)
    while 0 != len(my_queue):
        heapq.heapify(my_queue)
        store = my_queue.pop(0)
        x = int(store[0])
        y = store[-1]
        visit[y] = True
        for i, j in G[y]:
            if visit[j]:
                continue
            if my_dict[j] <= i + x:
                continue
            my_dict[j] = i + x
            my_queue.append((my_dict[j], j))
            pq[j] = pq[y] + [j]
    result = my_dict[d]
    output = f"{result} -> {pq[d]}"
    return output


input_file = open('input4.txt', 'r')
output_file = open('output4.txt', 'w')
input_read1 = input_file.readline().split()
input_read_2 = input_file.readline().split()
traf = list(map(int, input_file.readline().split()))
g = {}
for a, b, c in zip(input_read1, input_read_2, traf):
    if a in g.keys():
        g[a].append((c, b))
    else:
        g[a] = [(c, b)]
source = "Motijheel"
destination = "MOGHBAZAR"
g[destination] = []
g['E'] = []
output_file.write(dijkstra(g, source, destination))
output_file.close()

#As there are weights(TRAFFIC level) and it is a weighted graph, we cannot use BFS to extract the sortest path